%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../figs/beta_dist.eps
%%Creator: gnuplot 5.2 patchlevel 5
%%CreationDate: Tue Feb 26 11:58:46 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -233 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../figs/beta_dist.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 5)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb 26 11:58:46 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times) findfont 700 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
3010 2240 M
63 0 V
7186 0 R
-63 0 V
stroke
2800 2240 M
[ [(Times) 700.0 0.0 true true 0 ( 0)]
] -233.3 MRshow
/Times findfont 700 scalefont setfont
/vshift -233 def
1.000 UL
LTb
LCb setrgbcolor
3010 3780 M
63 0 V
7186 0 R
-63 0 V
stroke
2800 3780 M
[ [(Times) 700.0 0.0 true true 0 ( 10)]
] -233.3 MRshow
/Times findfont 700 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3010 5321 M
63 0 V
7186 0 R
-63 0 V
stroke
2800 5321 M
[ [(Times) 700.0 0.0 true true 0 ( 20)]
] -233.3 MRshow
/Times findfont 700 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3010 6861 M
63 0 V
7186 0 R
-63 0 V
stroke
2800 6861 M
[ [(Times) 700.0 0.0 true true 0 ( 30)]
] -233.3 MRshow
/Times findfont 700 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5426 2240 M
0 63 V
0 5636 R
0 -63 V
stroke
5426 1540 M
[ [(Times) 700.0 0.0 true true 0 (0.7)]
] -233.3 MCshow
/Times findfont 700 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
10259 2240 M
0 63 V
0 5636 R
0 -63 V
stroke
10259 1540 M
[ [(Times) 700.0 0.0 true true 0 (0.8)]
] -233.3 MCshow
/Times findfont 700 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCb setrgbcolor
3010 2240 M
7249 0 V
stroke
LTB
LCb setrgbcolor
3010 7939 N
0 -5699 V
7249 0 V
0 5699 V
-7249 0 V
Z stroke
1.000 UP
10.000 UL
[] 0 setdash
PL LCb setrgbcolor
6393 2240 M
0 3851 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
1470 5089 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times) 700.0 0.0 true true 0 (Prob. density)]
] -233.3 MCshow
grestore
/Times findfont 700 scalefont setfont
LTb
LCb setrgbcolor
6634 490 M
[ [(Times) 700.0 0.0 true true 0 (Reliability)]
] -233.3 MCshow
/Times findfont 700 scalefont setfont
LTb
% Begin plot #1
1.000 UP
10.000 UL
LTb
1.00 0.40 0.40 C LCb setrgbcolor
7256 7526 M
[ [(Times) 700.0 0.0 true true 0 (pdf\(w1\))]
] -233.3 MRshow
/Times findfont 700 scalefont setfont
1.000 UP
10.000 UL
LTb
1.00 0.40 0.40 C 7676 7526 M
1743 0 V
3010 2246 M
73 2 V
73 2 V
74 3 V
73 4 V
73 4 V
73 5 V
74 7 V
73 8 V
73 9 V
73 12 V
73 14 V
74 16 V
73 20 V
73 23 V
73 27 V
74 31 V
73 36 V
73 41 V
73 47 V
73 53 V
74 61 V
73 67 V
73 75 V
73 82 V
74 90 V
73 99 V
73 106 V
73 114 V
73 121 V
74 128 V
73 133 V
73 139 V
73 142 V
74 144 V
73 145 V
73 145 V
73 141 V
73 137 V
74 131 V
73 121 V
73 112 V
73 99 V
74 85 V
73 69 V
73 53 V
73 34 V
73 16 V
74 -3 V
73 -22 V
73 -41 V
73 -59 V
74 -77 V
73 -92 V
73 -107 V
73 -120 V
73 -131 V
74 -140 V
73 -146 V
73 -151 V
73 -153 V
74 -154 V
73 -152 V
73 -149 V
73 -144 V
73 -138 V
74 -131 V
73 -123 V
73 -114 V
73 -105 V
74 -96 V
73 -87 V
73 -77 V
73 -69 V
73 -61 V
74 -53 V
73 -46 V
73 -39 V
73 -33 V
74 -28 V
73 -24 V
73 -19 V
73 -16 V
73 -13 V
74 -10 V
73 -8 V
73 -7 V
73 -5 V
74 -4 V
73 -3 V
73 -2 V
73 -2 V
73 -2 V
74 0 V
73 -1 V
73 -1 V
73 0 V
74 0 V
73 -1 V
73 0 V
3010 2246 Pls
3083 2248 Pls
3156 2250 Pls
3230 2253 Pls
3303 2257 Pls
3376 2261 Pls
3449 2266 Pls
3523 2273 Pls
3596 2281 Pls
3669 2290 Pls
3742 2302 Pls
3815 2316 Pls
3889 2332 Pls
3962 2352 Pls
4035 2375 Pls
4108 2402 Pls
4182 2433 Pls
4255 2469 Pls
4328 2510 Pls
4401 2557 Pls
4474 2610 Pls
4548 2671 Pls
4621 2738 Pls
4694 2813 Pls
4767 2895 Pls
4841 2985 Pls
4914 3084 Pls
4987 3190 Pls
5060 3304 Pls
5133 3425 Pls
5207 3553 Pls
5280 3686 Pls
5353 3825 Pls
5426 3967 Pls
5500 4111 Pls
5573 4256 Pls
5646 4401 Pls
5719 4542 Pls
5792 4679 Pls
5866 4810 Pls
5939 4931 Pls
6012 5043 Pls
6085 5142 Pls
6159 5227 Pls
6232 5296 Pls
6305 5349 Pls
6378 5383 Pls
6451 5399 Pls
6525 5396 Pls
6598 5374 Pls
6671 5333 Pls
6744 5274 Pls
6818 5197 Pls
6891 5105 Pls
6964 4998 Pls
7037 4878 Pls
7110 4747 Pls
7184 4607 Pls
7257 4461 Pls
7330 4310 Pls
7403 4157 Pls
7477 4003 Pls
7550 3851 Pls
7623 3702 Pls
7696 3558 Pls
7769 3420 Pls
7843 3289 Pls
7916 3166 Pls
7989 3052 Pls
8062 2947 Pls
8136 2851 Pls
8209 2764 Pls
8282 2687 Pls
8355 2618 Pls
8428 2557 Pls
8502 2504 Pls
8575 2458 Pls
8648 2419 Pls
8721 2386 Pls
8795 2358 Pls
8868 2334 Pls
8941 2315 Pls
9014 2299 Pls
9087 2286 Pls
9161 2276 Pls
9234 2268 Pls
9307 2261 Pls
9380 2256 Pls
9454 2252 Pls
9527 2249 Pls
9600 2247 Pls
9673 2245 Pls
9746 2243 Pls
9820 2243 Pls
9893 2242 Pls
9966 2241 Pls
10039 2241 Pls
10113 2241 Pls
10186 2240 Pls
10259 2240 Pls
8547 7526 Pls
% End plot #1
% Begin plot #2
0.500 UP
10.000 UL
LTb
0.00 0.50 1.00 C LCb setrgbcolor
7256 6826 M
[ [(Times) 700.0 0.0 true true 0 (pdf\(w2\))]
] -233.3 MRshow
/Times findfont 700 scalefont setfont
0.500 UP
10.000 UL
LTb
0.00 0.50 1.00 C 7676 6826 M
1743 0 V
3010 2240 M
73 0 V
73 0 V
74 1 V
73 0 V
73 0 V
73 1 V
74 0 V
73 1 V
73 2 V
73 2 V
73 2 V
74 4 V
73 4 V
73 7 V
73 8 V
74 10 V
73 14 V
73 18 V
73 22 V
73 28 V
74 34 V
73 42 V
73 52 V
73 62 V
74 74 V
73 87 V
73 101 V
73 117 V
73 134 V
74 150 V
73 167 V
73 184 V
73 200 V
74 213 V
73 225 V
73 234 V
73 239 V
73 240 V
74 235 V
73 227 V
73 212 V
73 192 V
74 167 V
73 138 V
73 104 V
73 68 V
73 28 V
74 -12 V
73 -52 V
73 -91 V
73 -127 V
74 -160 V
73 -189 V
73 -212 V
73 -231 V
73 -242 V
74 -250 V
73 -250 V
73 -247 V
73 -239 V
74 -227 V
73 -211 V
73 -195 V
73 -177 V
73 -157 V
74 -138 V
73 -120 V
73 -102 V
73 -87 V
74 -71 V
73 -59 V
73 -48 V
73 -38 V
73 -29 V
74 -23 V
73 -18 V
73 -13 V
73 -10 V
74 -8 V
73 -5 V
73 -4 V
73 -2 V
73 -2 V
74 -2 V
73 0 V
73 -1 V
73 0 V
74 -1 V
73 0 V
73 0 V
73 0 V
73 0 V
74 0 V
73 0 V
73 0 V
73 0 V
74 0 V
73 0 V
73 0 V
3010 2240 Crs
3083 2240 Crs
3156 2240 Crs
3230 2241 Crs
3303 2241 Crs
3376 2241 Crs
3449 2242 Crs
3523 2242 Crs
3596 2243 Crs
3669 2245 Crs
3742 2247 Crs
3815 2249 Crs
3889 2253 Crs
3962 2257 Crs
4035 2264 Crs
4108 2272 Crs
4182 2282 Crs
4255 2296 Crs
4328 2314 Crs
4401 2336 Crs
4474 2364 Crs
4548 2398 Crs
4621 2440 Crs
4694 2492 Crs
4767 2554 Crs
4841 2628 Crs
4914 2715 Crs
4987 2816 Crs
5060 2933 Crs
5133 3067 Crs
5207 3217 Crs
5280 3384 Crs
5353 3568 Crs
5426 3768 Crs
5500 3981 Crs
5573 4206 Crs
5646 4440 Crs
5719 4679 Crs
5792 4919 Crs
5866 5154 Crs
5939 5381 Crs
6012 5593 Crs
6085 5785 Crs
6159 5952 Crs
6232 6090 Crs
6305 6194 Crs
6378 6262 Crs
6451 6290 Crs
6525 6278 Crs
6598 6226 Crs
6671 6135 Crs
6744 6008 Crs
6818 5848 Crs
6891 5659 Crs
6964 5447 Crs
7037 5216 Crs
7110 4974 Crs
7184 4724 Crs
7257 4474 Crs
7330 4227 Crs
7403 3988 Crs
7477 3761 Crs
7550 3550 Crs
7623 3355 Crs
7696 3178 Crs
7769 3021 Crs
7843 2883 Crs
7916 2763 Crs
7989 2661 Crs
8062 2574 Crs
8136 2503 Crs
8209 2444 Crs
8282 2396 Crs
8355 2358 Crs
8428 2329 Crs
8502 2306 Crs
8575 2288 Crs
8648 2275 Crs
8721 2265 Crs
8795 2257 Crs
8868 2252 Crs
8941 2248 Crs
9014 2246 Crs
9087 2244 Crs
9161 2242 Crs
9234 2242 Crs
9307 2241 Crs
9380 2241 Crs
9454 2240 Crs
9527 2240 Crs
9600 2240 Crs
9673 2240 Crs
9746 2240 Crs
9820 2240 Crs
9893 2240 Crs
9966 2240 Crs
10039 2240 Crs
10113 2240 Crs
10186 2240 Crs
10259 2240 Crs
8547 6826 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
3010 7939 N
0 -5699 V
7249 0 V
0 5699 V
-7249 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
